// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0

package repository

import (
	"time"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Controller struct {
	ID              uuid.UUID   `db:"id" json:"id"`
	CpuID           string      `db:"cpu_id" json:"cpuId"`
	UserID          pgtype.UUID `db:"user_id" json:"userId"`
	FirmwareVersion string      `db:"firmware_version" json:"firmwareVersion"`
	CreatedAt       time.Time   `db:"created_at" json:"createdAt"`
	UpdatedAt       time.Time   `db:"updated_at" json:"updatedAt"`
}

type ControllerSetting struct {
	ID            uuid.UUID `db:"id" json:"id"`
	AutoStart     bool      `db:"auto_start" json:"autoStart"`
	HeartbeatRate int16     `db:"heartbeat_rate" json:"heartbeatRate"`
	UpdatedAt     time.Time `db:"updated_at" json:"updatedAt"`
}

type ControllerTelemetry struct {
	ID            uuid.UUID   `db:"id" json:"id"`
	ControllerID  pgtype.UUID `db:"controller_id" json:"controllerId"`
	Timestamp     time.Time   `db:"timestamp" json:"timestamp"`
	OutputPower   int32       `db:"output_power" json:"outputPower"`
	Soc           int16       `db:"soc" json:"soc"`
	EvDischarging bool        `db:"ev_discharging" json:"evDischarging"`
}

type Identity struct {
	ID           uuid.UUID `db:"id" json:"id"`
	Username     string    `db:"username" json:"username"`
	PasswordHash string    `db:"password_hash" json:"passwordHash"`
	CreatedAt    time.Time `db:"created_at" json:"createdAt"`
}

type RefreshToken struct {
	Token      []byte    `db:"token" json:"token"`
	IdentityID uuid.UUID `db:"identity_id" json:"identityId"`
	CreatedAt  time.Time `db:"created_at" json:"createdAt"`
	ExpiresAt  time.Time `db:"expires_at" json:"expiresAt"`
}

type User struct {
	ID        uuid.UUID `db:"id" json:"id"`
	Username  string    `db:"username" json:"username"`
	CreatedAt time.Time `db:"created_at" json:"createdAt"`
}
